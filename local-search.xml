<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>对初学者友好的Git和Github使用指南之介绍和安装篇</title>
    <link href="/2020/12/26/git_github/"/>
    <url>/2020/12/26/git_github/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本文将初步介绍Github和Git是什么，以及介绍如何注册Github和安装Git。这也是搭建博客的前期准备工作。</p><a id="more"></a> <p><code>Use it. They are just tools.</code></p><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>GitHub是一个值得你探索的宝藏网站，它已经不再是开发人员的专属，无需掌握任何代码知识，你也可以玩转它。本文会用我们熟悉的网站和工具进行类比来逐渐解锁GitHub这个神奇的网站。</p><h4 id="GitHub是什么"><a href="#GitHub是什么" class="headerlink" title="GitHub是什么"></a><strong>GitHub是什么</strong></h4><blockquote><p>GitHub是通过Git进行版本控制的软件源代码托管服务平台。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://zh.wikipedia.org/wiki/GitHub">[1]</span></a></sup></p></blockquote><p>最质朴的解释：GitHub是存放代码的地方，若将代码公开则可以被全世界的人看到。<br>在浏览器中打开<a href="https://github.com/">GitHub</a>，可以看到首页中介绍了这是全世界构建软件的地方。简而言之：涉及到代码就上GitHub。就像买东西上淘宝，找资源上百度网盘。<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226104853.png"></p><p>上面对GitHub的解释都是关于代码方面的，但在今天只要你有想在网络上被其他人看见的内容都可以在上面发布。就像曾经受众多为二次元的平台<a href="https://www.bilibili.com/">哔哩哔哩</a>，今天却经常被称为b站大学。看看GitHub上除代码之外还有什么：</p><ul><li><p>学习资源，在输入框中输入<code>awesome</code>，你将收获丰富的学习资源（目前多为编程相关，所以对其他专业来说这还有很大可填补的空间）<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226131616.png"></p><ul><li><p>点开<code>See topic</code>（类似于微博里的超话），里面都是关于这个话题的内容<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226133540.png"></p></li><li><p>点开第一个awesome合集（从学习资料到电子书到找工作到娱乐都给安排得妥妥的）<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226131648.png?60" alt="点击可放大"><br>&diams; Github中文社区精选了优质的<a href="https://www.githubs.cn/awesome">awesome资源</a></p><br></li></ul></li><li><p>奇奇怪怪的东西</p><ul><li><p>曾经在八卦圈流传颇广又屡次被删的421页PDF<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226132310.png"></p></li><li><p>最全中文诗歌古典文集数据库<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226184422.png"></p></li><li><p>通过输入感兴趣的关键词进行自行探索，中文、英文都可以试试，解锁更多精彩<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226184012.png"></p></li></ul></li><li><p>热门话题、趋势（类似于微博中的热搜），点击首页中的<code>Explore</code><br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226134326.png"><br>&diams; GitHub中文社区同样也有<a href="https://www.githubs.cn/trending">热门趋势</a>栏目</p></li></ul><br>以上功能均不需要注册就可以使用。但若想解锁更多功能还得从拥有一个账户开始。本文主要是为搭建博客做准备，更多功能将结合日后使用进行介绍。<br><br><ul><li>不得不提的GitHub Pages服务，通过GitHub Pages可以免费搭建博客，其他用户通过在浏览器中输入<code>username.github.io</code>访问该博客。<blockquote><p>GitHub提供了一个叫做GitHub Pages的功能，可以免费把你的静态网页托管在Github上。<br>GitHub Pages 是一项静态站点托管服务，它直接从 GitHub 上的仓库获取 HTML、CSS 和 JavaScript 文件，（可选）通过构建过程运行文件，然后发布网站。<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://docs.github.com/cn/free-pro-team@latest/github/working-with-github-pages/about-github-pages">[2]</span></a></sup></p></blockquote></li></ul><h4 id="注册GitHub账户"><a href="#注册GitHub账户" class="headerlink" title="注册GitHub账户"></a>注册GitHub账户</h4><ol><li><p>进入<a href="https://github.com/">Github</a>网站，点击首页的<code>Sign up</code><br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226142411.png"></p></li><li><p>根据官方指引进行操作<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226143153.png?80" alt="点击可放大"></p></li><li><p>首次登录后会出现下面这张图，<strong>不需要任何代码知识就能学习Git和GitHub</strong>（此图是以前的，现在可能有不同）<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/Image.png"></p></li></ol><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>不使用Git的GitHub更像是一个资源库，更强大的功能需要通过Git来实现。</p><h4 id="Git是什么"><a href="#Git是什么" class="headerlink" title="Git是什么"></a>Git是什么</h4><ul><li>Git是一个分布式版本控制系统，对用户上传到Github上的内容进行版本控制。<ul><li>分布式：目前我还解释不清。总之，就是好。</li><li>版本控制：相信大家在编写文档时都出现过不断修改文档并重新保存的情况，如果想查看以前的文档必须在之前就将其保存，若没有保存下来将无法查看。但这个操作可以通过Git轻松实现，想回到哪个版本就回到哪个版本，再次回到最新版本也是一条命令的事。总之，优秀。当然它还能实现更多的功能。<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226171803.png"></li></ul></li></ul><h4 id="安装Git（本文是在windows操作系统下）"><a href="#安装Git（本文是在windows操作系统下）" class="headerlink" title="安装Git（本文是在windows操作系统下）"></a>安装Git（本文是在windows操作系统下）</h4><ol><li>下载安装包</li></ol><ul><li><p>在<a href="https://git-scm.com/downloads">Git官网</a>下载安装包<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226164520.png"></p></li><li><p>若官网下载速度太慢，选择<a href="https://npm.taobao.org/mirrors/git-for-windows/">国内下载地址</a></p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226164711.png"></div><div class="group-image-wrap"><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226164935.png"></div></div></div></li></ul><ol start="2"><li>安装过程<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227121219.png"><br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227121319.png"><br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227121410.png"><br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227121542.png"></li></ol><ul><li><p>生成桌面快捷方式</p><p><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226200115.png?80" alt="点击可放大"></p></li></ul><ol start="3"><li>检测是否安装成功</li></ol><ul><li><p>在电脑桌面鼠标右击，选择<code>Git Bash Here</code><br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226170804.png?80" alt="点击可放大"></p></li><li><p>在出现的命令行界面中输入<code>git --version</code>，回车可查看安装的版本号，即为安装成功<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227122239.png"></p></li><li><p>[可选]修改Git Bash打开时的默认路径。鼠标右击Git Bash快捷方式，点击“属性”<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227123126.png"></p></li></ul><ol start="4"><li>配置SSH Key</li></ol><ul><li><p>在电脑桌面鼠标右击，选择<code>Git Bash Here</code><br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226170804.png?80" alt="点击可放大"></p></li><li><p>在命令行中输入<code>cd ~/.ssh/</code>，回车<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227123451.png"></p></li><li><p>若显示<code>No such file or directory</code>，则创建一个，在命令行中输入<code>mkdir ~/.ssh</code>，回车<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227123606.png"></p></li><li><p>配置全局的name和email，在命令行分别输入<code>git config --global username(你注册GitHub时的用户名)</code> <code>git config --global useremail(你注册GitHub时的邮箱)</code><br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227123806.png"></p></li><li><p>生成SSH Key，在命令行中输入<code>ssh-keygen -t rsa -C useremail(你注册GitHub时的邮箱)</code>，完成后在本地会得到两个文件（命令行中会显示存放在哪里）<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227124604.png"></p></li><li><p>在GitHub上添加SSH Key</p><ul><li><p>用记事本打开<code>id_rsa.pub</code>文件，将里面的内容全部复制</p></li><li><p>点击GitHub个人头像，点击<code>Settings</code> –&gt; <code>SSH and GPG keys</code> –&gt; <code>New SSh key</code>，将上一步复制的内容全部粘贴</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226194734.png"></div><div class="group-image-wrap"><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226194522.png"></div></div></div></li><li><p>查看是否添加成功，在命令行中输入<code>ssh git@github.com</code>，显示如下即为安装成功</p><p><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226195013.png"></p></li></ul></li></ul><br><h3 id="Git和Github的关系"><a href="#Git和Github的关系" class="headerlink" title="Git和Github的关系"></a>Git和Github的关系</h3><p>这时候可以用我们熟悉的百度云网盘来举例。从图中可以看出人通过手动对百度云网盘进行操作，而通过Git可以实现只需要输入命令就能完成对Github的操作，并且实现的功能更多。<br><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226183132.png"></p><br><p>&diams; 至此，搭建博客的准备工作已经完成。关于Github和Git还有不少可以介绍的地方，日后再通过实践学习，<strong>边学边用，记得更牢</strong>。</p><h3 id="更多学习资料"><a href="#更多学习资料" class="headerlink" title="更多学习资料"></a>更多学习资料</h3><ul><li><a href="https://www.githubs.cn/post/git-tutorial">GitHub中文社区汇总的优质Git和GitHub教程</a></li><li><a href="https://guides.github.com/">GitHub官方指南</a></li><li><a href="https://github.blog/2018-04-19-introducing-github-learning-lab/">GitHub官方教学</a><!-- ![](https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226175413.png)![](https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201225215610.png) --><br><br></li></ul><p>&diams; 若有任何问题欢迎在评论区留言或者在<a href="https://github.com/momoknight/momoknight.github.io/issues">Github上我的博客仓库的Issues版块</a>中留言。（Issues相当于论坛的讨论版块，提出的问题任何人都可以看见）</p><!-- ![](https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201227133246.png) --><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226185527.png"></div><div class="group-image-wrap"><img src="https://cdn.jsdelivr.net/gh/momoknight/blog-images/images/20201226185609.png"></div></div></div><br><br><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://zh.wikipedia.org/wiki/GitHub">https://zh.wikipedia.org/wiki/GitHub</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://docs.github.com/cn/free-pro-team@latest/github/working-with-github-pages/about-github-pages">https://docs.github.com/cn/free-pro-team@latest/github/working-with-github-pages/about-github-pages</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Tool</category>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>More About Zero&#39;s Planet</title>
    <link href="/2020/12/20/hello_world/"/>
    <url>/2020/12/20/hello_world/</url>
    
    <content type="html"><![CDATA[<h3 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h3><p>Hello, here is Zero’s Planet.<br>Welcome to my online world.</p><a id="more"></a> <p>You can call me Zero.<br>I will share anything that I find interesting.<br>Hope you will have a good time here!</p><!-- Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues). --><!-- 我们曾经相聚在一起，然后找到自己的路，建立自己的站点； --><p>愿在网络世界也能安居乐业<br>让我们在宇宙中相遇吧</p><!-- 中心化去中心化 --><br><p><button><a href="/about/" style="color: #2a3a4a; text-decoration:none">Who is Zero</a></button></p><h3 id="1-0版Log"><a href="#1-0版Log" class="headerlink" title="1.0版Log"></a>1.0版Log</h3><ul><li>201219&amp;201220：选择搭建框架、搭建博客、修改博客默认主题：采用的主题是Fluid<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://github.com/fluid-dev/hexo-theme-fluid">[1]</span></a></sup></li><li>201221：编写About页面、编写第一篇介绍博文</li><li>201222：设置博客banner<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://dribbble.com/shots/13452073-Creative-Coding-Tusi-Couple">[2]</span></a></sup>(还在构思，完成后替换）、浏览器标签图标、设置字体样式、考虑博客整体配色，使用阮一峰博客推荐的配色指南<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="http://www.ruanyifeng.com/blog/2019/03/coloring-scheme.html">[3]</span></a></sup></li><li>201223：配置个人域名、增加评论模块</li><li>201224：增加打赏功能，修改已写文字；22:30上线</li></ul><h3 id="鸣谢列表"><a href="#鸣谢列表" class="headerlink" title="鸣谢列表"></a>鸣谢列表</h3><p>– 星球建设费，感谢您对Zero’s Planet的支持</p><ul><li>momo – 一名社会闲散人员</li><li>琴 动 </li><li>狗草花</li><li>*林</li><li>*年</li><li>小丸子樱桃</li></ul><br><br><br><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://dribbble.com/shots/13452073-Creative-Coding-Tusi-Couple">https://dribbble.com/shots/13452073-Creative-Coding-Tusi-Couple</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span><a href="http://www.ruanyifeng.com/blog/2019/03/coloring-scheme.html">http://www.ruanyifeng.com/blog/2019/03/coloring-scheme.html</a><a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>初识博客 —— 使用Github Pages+Hexo快速搭建个人博客</title>
    <link href="/2020/05/16/build_blog/"/>
    <url>/2020/05/16/build_blog/</url>
    
    <content type="html"><![CDATA[<!-- 写了千言万语最后 --><!-- `自由失去了才知其可贵` --><!-- `我向宇宙发出了一个信号，感谢您的接收和回应。` --><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本文将初步介绍如何使用Github Pages和Hexo框架搭建个人博客。<br><strong>前情回顾</strong>：<a href="https://ladyzero.cool/2020/12/26/git_github/#">搭建博客的前期准备工作</a></p><a id="more"></a> <p><code>Use it. They are just tools.</code></p><h3 id="搭建个人博客的原因"><a href="#搭建个人博客的原因" class="headerlink" title="搭建个人博客的原因"></a>搭建个人博客的原因</h3><!-- [为什么搭建博客](https://atreides.one/2020/03/01/whyblog/#more) --><ul><li>契机：去年在网络上冲浪的时候看到关注的一些博主在互联网审查机制的影响下纷纷自建起了博客，并且分享了很多其自建博客的教程。</li><li>即使表达欲并不是很旺盛的我在看到很多互联网用户炸号、被删帖，在网络上不得不玩着各大平台下的文字游戏，我也渐渐感受到一只无形的双手在捂着我的嘴。</li><li>除了感到表达的自由极度受到限制外，另一方面我被这份分享和技术激情所吸引和感染，作为一个也算学着计算机的人却从未感受到技术给我带来的兴奋感，大多数时候都在谴责自己为何为了钱选择了这个专业，而现在的我也在跟着网络的教程把玩各种工具的过程中感受到了这门学科的魅力，不夸张的说这过程逐渐改变了我的职业选择。</li><li>这几年受惠于互联网上很多人分享的内容，希望自己也能持有这份分享的热忱，不管是总结自己所学，还是通过输出倒逼输入，持续学习，能将此博客持续运营下去，更多的是希望分享的内容能够帮助到一些人。<h3 id="搭建方案的选择"><a href="#搭建方案的选择" class="headerlink" title="搭建方案的选择"></a>搭建方案的选择</h3></li><li>选择<strong>Github Pages</strong>的原因：通过搜索关键词“免费”、“快速搭建”查看结果，最终选择了使用<strong>Github Pages</strong>静态网页托管服务进行搭建。<blockquote><p><strong>Github Pages</strong>就是将你的Github仓库转换为优雅的网站来展示您的作品集、文档或者任何您想与世界分享的其他东西。在许多情况下，您甚至都不需要设置数据库和设置服务器、不需要知道HTML。</p><p>若您已经在使用Github，使用Github Pages是为您和您的项目创建网站的最直接途径。</p><p>github通过绑定的个人URL<code>https://your-account.github.io</code>为您的所有项目站点提供服务。</p><p>使用你在Github上熟悉的工具和工作流程：可以使用Github流程来管理您的网站的更改，甚至编写测试，让Github在合并前将状态报告给你，使你腾出时间专注网站内容。</p></blockquote></li><li>选择<strong>Hexo</strong>框架的原因<ol><li>通过搜索词条“搭建博客”、“使用Github Pages搭建博客”出来的结果多数使用Hexo框架，说明大多数的坑已经被人踩过，若遇到问题基本可以得到解决。</li><li>在<a href="https://www.cnblogs.com/panchanggui/p/12483459.html">个人博客搭建方案选择</a>^[1]中推荐使用Hexo框架。</li><li>在中文社区下使用Hexo的用户比较多。</li><li>Hexo框架涉及到的语言——JavaScript在我日常的学习和使用范围内，方便后续更改源码。</li></ol></li><li><a href="https://lexcao.github.io/zh/posts/jekyll-hugo-hexo">常见框架Jekyll/Hugo/Hexo的比较</a>^[2]</li><li>强烈推荐更注重发布内容，减少折腾技术的用户使用<strong>Gridea</strong>框架——搭建流程简单，适合技术小白。<a href="https://sspai.com/post/54212">参考教程</a>  <a href="https://www.bilibili.com/video/BV1cE41197Pn?from=search&seid=14043256853248781638">参考视频</a></li></ul><!-- 这就相当于在互联网世界上有了自己的一个家呀，我可以邀请你们来我互联网的家里坐坐，你们也可以邀请我去你们的家里坐坐。虽然使用上述方法搭建的博客依然是由第三方平台托管，但相对于微博、微信、知乎、简书等博客平台多了很多自主权，甚至可以通过买域名有自己的域名命名的网站，可以直接通过输入网址就能访问你的xxxx，这是一件多么酷的事情。在没有经历过博客时代，直接就落入微博时代，在如今即将拥有自己的独立博客这件事让我多多少少有些兴奋，时尚是个圈，技术是不是也是个圈呢，特别在这个宣称人人都是自媒体的时代，它可以是我们的一个身份，我们在互联网上的一个ID。它可能是现实世界的你的投射，或许也不是完全的你，你也可以打造一个新的人设。it's all for you.然后这样想，今天给自己创建了一个互联网身份，那我就相当于刚出生耶，现在才0岁，一下子就年轻了，而且我还带着这些年在现实世界摸爬滚打掌握的一些技能，那我在互联网世界里就能快速成长，岂不美哉。在如今的互联网平台上发表言论已经收到诸多限制，被删帖吞评论已经是常有的事。在博客上可以什么都写，比如年末了，可以写篇年终总结，来年计划也可以加入写作list，这一下就是两篇文章啦，并且在搭建博客时你遇到了什么问题，怎么解决的，有什么感悟都可以记录下来，写成一篇博文，就比如我现在的这篇文章。你可以建立一个图库目录，在里面上传图片。界面由你自己定义。在应聘工作时可以在简历里加入自己的博客网址，相信会是一个非常赞的加分项，不管什么职业如果求职的时候在简历里加入自己的个人博客或者网站，你想想如果自己作为面试官是不是都要对这个人想多认识一下，多了解一下。友链、评论。曾经我想别人都总结的那么好了，我有什么可写的，而且我写的还没有别人好，咦？我突然发现还真的有可以写的，在实践完之后确实有些感悟，我们不是大佬，一开始不能写出技术含量过高的，但我们也是有自己的受众群体的，比如我这篇就是给还没有搭建博客的你们看的。你们同样也会有受众群体。此篇搭建博客教程不太涉及具体技术理论，完全适合初学者食用，对具体技术该兴趣可以自行进行搜索，另一方面现在的我有讲不清楚这些理论。等日后弄明白了可以再更新一篇博文，哇，这样又一篇博文又加入到了我的写作list中。初学者面对技术名词千万不要犯怵，看搭建过程时完全可以将其用“大白菜”代替，它们在今天的文章中都只是工具，只需要利用它们根据步骤快速把博客搭建起来，日后感兴趣可以再做学习研究。一开始使用markdown或许有不习惯，但请多使用就能get到它的方便之处了。不需要再去调格式，真的就是沉浸式协作。也将推荐一些我看到的一些博客我的博客启蒙应该是阳志平的博客了，当初浏览完他的博客时第一感觉就是这人太牛了，我就是一生能干成一件事就很牛了，怎么他已经能干这么多事了。 --><h3 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h3><ol><li>注册github账户</li><li>安装nodejs</li><li>安装git</li></ol><ul><li>新建仓库<br><img src="2020-12-20-03-28-12.png"><br><img src="2020-12-20-03-34-08.png"><br><img src="2020-12-20-03-40-13.png"></li></ul><p><img src="2020-12-20-03-45-11.png"><br><img src="2020-12-20-03-49-13.png"></p><ul><li><p>安装Hexo<br>这个过程可能慢，就等着吧，哈哈哈<br><img src="2020-12-20-03-57-53.png"><br>输入xxx看是否安装成功<br><img src="2020-12-20-04-06-45.png"><br><img src="2020-12-20-04-13-29.png"><br>这时候本地Code文件夹下将生成一个名为momoknight的文件夹<br><img src="2020-12-20-04-15-48.png"><br>文件夹目录如下：<br><img src="2020-12-20-04-16-07.png"><br><img src="2020-12-20-04-27-40.png"><br><img src="2020-12-20-04-30-54.png"><br>在浏览器中输入<code>http://localhost:4000/</code>进行访问<br>效果如图所示<br><img src="2020-12-20-04-32-53.png"><br><img src="2020-12-20-04-34-48.png"><br><img src="2020-12-20-04-37-01.png"><br>这时候刷新网页，就无法访问了</p></li><li><p>部署到Github上（连接Github与本地）<br>安装部署插件<br><img src="2020-12-20-04-43-35.png"></p></li><li><p>选择自己喜欢的主题<br><a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br><a href="https://www.zhihu.com/question/24422335">https://www.zhihu.com/question/24422335</a><br>找到后，复制其github仓库的地址<br><img src="2020-12-20-04-54-49.png"></p></li></ul><p><code>git clone 复制的地址 themes/主题名字</code></p><p>如果不复制，在项目介绍的页面中会写如何安装，直接复制命令，粘贴到命令行中<br><img src="2020-12-20-05-00-27.png"><br>此时本地的themes文件夹中生成刚刚下载的主题文件夹<br><img src="2020-12-20-05-01-23.png"><br><img src="2020-12-20-05-02-28.png"></p><ul><li><p>修改配置文件<br>修改前可复制一份，以免出错<br><img src="2020-12-20-05-04-21.png"><br><img src="2020-12-20-05-11-47.png"><br>修改为刚刚的主题名<br><img src="2020-12-20-05-12-03.png"></p></li><li><p>更新主题<br>先保存配置文件<br><img src="2020-12-20-05-16-56.png"><br><img src="2020-12-20-15-27-16.png"><br>主题代码仓库的说明里写了如何操作<br><img src="2020-12-20-17-58-38.png"><br><img src="2020-12-20-17-57-29.png"><br>（更新主题和部署替换一下顺序）</p></li><li><p>部署</p><blockquote><p>hexo g：构建：用于生成博客的html文件<br>hexo s：预览：用于在本地预览博客，打开浏览器，输入localhost:4000/即可查看<br>hexo d：检测博客格式等符合要求后，用此命令将博客推送到远端。<br>推送（记得清除缓存）<br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br><a href="https://cuiqingcai.com/ckit1cx0e00rpncs13xgl04ay.html">参考</a></p></blockquote></li></ul><p>复制SSH的地址<br><img src="2020-12-20-05-18-20.png"><br><img src="2020-12-20-05-20-41.png"><br><img src="2020-12-20-05-32-46.png"></p><p><img src="2020-12-20-15-27-41.png"><br><img src="2020-12-20-15-27-52.png"><br><img src="2020-12-20-15-28-30.png"><br>这时候网址中输入<code>username.github.io</code>，我的就是<code>momoknight.github.io</code>就能访问你的博客。<br><img src="2020-12-20-15-34-37.png"><br>此时github上的博客仓库就更新了<br><img src="2020-12-20-15-39-11.png"></p><p>部署上去之后，输入网址可能还是之前的版本，多等待一会儿或者多刷新几次就好了。</p>]]></content>
    
    
    <categories>
      
      <category>Tool</category>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github pages</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
